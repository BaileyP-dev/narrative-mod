<!-- DO NOT REMOVE THE FOLLOWING COMMENT -->
<!-- (c) Copyright 2014 Caroline Hill. All Rights Reserved. Contact Mlle Caroline Schnapp at mllegeorgesand@gmail.com -->
<!-- DO NOT REMOVE THE ABOVE COMMENT -->

{% if linklists.gift-wrapping.links.size > 0 and linklists.gift-wrapping.links.first.type == 'product_link' %}
  <div id="is-a-gift" style="clear: left; margin: 30px 0" class="clearfix rte">
    <p>
      <input type="hidden" name="attributes[gift-wrapping]" value="" />
      <input id="gift-wrapping" type="checkbox" name="attributes[gift-wrapping]" value="yes" {% if cart.attributes.gift-wrapping %} checked="checked"{% endif %} style="float: none" />
      <label for="gift-wrapping" style="display:inline; padding-left: 5px; float: none;">
        For {{ linklists.gift-wrapping.links.first.object.price | money }} per item,
        please wrap the products in this order.
      </label>
    </p>
    <p>
      <label style="display:block" for="gift-note">Gift message (free and optional):</label>
      <textarea name="attributes[gift-note]" id="gift-note">{{ cart.attributes.gift-note }}</textarea>
    </p>
  </div>

  {% assign id = linklists.gift-wrapping.links.first.object.variants.first.id %}

  {% assign gift_wraps_in_cart = 0 %}
  {% for item in cart.items %}
    {% if item.id == id %}
      {% assign gift_wraps_in_cart = item.quantity %}
      <!-- Dien -->
      {% assign gift_wraps_in_cart_key = item.key %}
    {% endif %}
  {% endfor %}
  {% assign items_in_cart = cart.item_count | minus: gift_wraps_in_cart %}

  <style>
    #updates_{{ id }} { display: none; }
  </style>

  <script>

      Shopify.Cart = Shopify.Cart || {};

      Shopify.Cart.GiftWrap = {};

      // Dien
      Shopify.Cart.GiftWrap.count = function() {
          var itemsInCart = 0;
          {% if settings.show_cart_drawer %}
              {% assign cart_item_classname = 'cart-drawer__item-quantity' %}
          {% else %}
              {% assign cart_item_classname = 'cart-item__qty-input' %}
          {% endif %}
          // Count total qty in cart for items that are not the gift wrap product
          $('input.{{ cart_item_classname }}').each(function countItems() {
              console.log($(this).attr('id'));
              // If gift-wrap product is in cart, then don't count its quantity
              if ('{{ gift_wraps_in_cart_key | default: "" }}' && $(this).attr('id').includes('{{ gift_wraps_in_cart_key }}')) {
                  console.log("gift-wrap cart key matched");
                  return;
              }
              itemsInCart += (+this.value);
              console.log("Num items: " + itemsInCart);
          });

          return itemsInCart;
      };

      // Dien
      // Parameterized the function
      Shopify.Cart.GiftWrap.set = function(numItems, callback) {
          function defaultSuccess() { location.href = '/cart'; }
          var done = (typeof callback === 'function') ? callback : defaultSuccess;
          var itemsInCart = numItems || {{ items_in_cart }};
          jQuery.ajax({
              type: 'POST',
              url: '/cart/update.js',
              data: { updates: { {{ id }}: itemsInCart }, attributes: { 'gift-wrapping': true } },
          dataType: 'json',
          success: done
          });
      };

      // Dien
      // Parameterized the function
      Shopify.Cart.GiftWrap.remove = function(callback) {
          function defaultSuccess() { location.href = '/cart'; }
          var done = (typeof callback === 'function') ? callback : defaultSuccess;
          jQuery.ajax({
              type: 'POST',
              url: '/cart/update.js',
              data: { updates: { {{ id }}: 0 }, attributes: { 'gift-wrapping': '' } },
          dataType: 'json',
          success: done
          });
      };

      // If we have nothing but gift-wrap items in the cart.
      {% if cart.items.size == 1 and gift_wraps_in_cart > 0 %}
      jQuery(function () {
          Shopify.Cart.GiftWrap.remove();
      });
      // If we don't have the right amount of gift-wrap items in the cart.
      {% elsif gift_wraps_in_cart > 0 and gift_wraps_in_cart != items_in_cart %}
      jQuery(function () {
          Shopify.Cart.GiftWrap.set();
      });
      // If we have a gift-wrap item in the cart but our gift-wrapping cart attribute has not been set.
      {% elsif gift_wraps_in_cart > 0 and cart.attributes.gift-wrapping == blank %}
      jQuery(function () {
          Shopify.Cart.GiftWrap.set();
      });
      // If we have no gift-wrap item in the cart but our gift-wrapping cart attribute has been set.
      {% elsif gift_wraps_in_cart == 0 and cart.attributes.gift-wrapping != blank %}
      jQuery(function () {
          Shopify.Cart.GiftWrap.set();
      });
      {% endif %}

      // When the gift-wrapping checkbox is checked or unchecked.
      // DIEN MODIFIED: to prevent double refresh of cart page in following scenario:
      // You start with a state where gift-wrap (GW) is checked and a quantity of GW product in cart.
      // You uncheck the GW checkbox, then you modify the quantities of your products in cart,
      // so that now the total of qty is different from the total qty when GW checkbox was checked.
      // When you then check the GW checkbox again, the cart will refresh and show the GW product reflecting the old total qty.
      // Now, we have the qty of GW product !== current total qty of products. This will trigger another cart refresh due to
      // the checks from the above if/elsif/endif block.
      // The change consists of performing a recount of total qty of items before setting the GW qty.
      jQuery(function() {
          var setCallback = null;
          var removeCallback = null;
          // If cart drawer enabled, prevent set() and remove() from loading /cart page.
          if ('{{ settings.show_cart_drawer | default: "false" }}' === 'true') {
              setCallback = function addGWItemToDOM() {
                  // Retrieves "Gift Wrap Stub" page from the "Gift Wrapping" menu.
                  // The page contains the generated HTML node of the Gift Wrap line item to be inserted in the Cart Drawer.
                  // Also includes elements with the updated subtotal and discount.
                  jQuery.ajax({
                      url: '{{ linklists.gift-wrapping.links[1].url }}',
                      dataType: "html"
                  })
                  .done(function insertGWItemtoCartDrawer(htmlStr) {
                      var stubHTML = jQuery(htmlStr);
                      var gWLineItem = stubHTML[0];
                      var newSubtotalSpan = stubHTML[1];
                      var newTotalDiscountSpan = stubHTML[2];
                      jQuery('div.cart-drawer__item-list').prepend(gWLineItem);
                      jQuery('span.cart-drawer__subtotal-number').text(newSubtotalSpan.innerText);
                      jQuery('span[data-cart-total-discount]').text(newTotalDiscountSpan.innerText);
                  });
              };

              removeCallback = function removeGWItemfromDOM() {
                  console.log('Removing GW Item: ' + '#' + $.escapeSelector('{{ gift_wraps_in_cart_key }}') + ' button.cart-drawer__item-delete');
                  jQuery('#' + $.escapeSelector('{{ gift_wraps_in_cart_key }}') + ' button.cart-drawer__item-delete').trigger('click');
              };
          }
          jQuery('[name="attributes\[gift-wrapping\]"]').change(function checkboxCb() {
              if (jQuery(this).is(':checked')) {
                  Shopify.Cart.GiftWrap.set(Shopify.Cart.GiftWrap.count(), setCallback);
              }
              else {
                  Shopify.Cart.GiftWrap.remove(removeCallback);
              }
          });
      });

      // Dien
      // Auto-refreshes qty of gift wrap product when qty of other products in cart changes
      // TODO: Need to fix cases where this doesn't work for Cart Drawer
      // TODO: To Fix: Gift message does not persist in Cart Drawer
      jQuery(function() {
          {% if settings.show_cart_drawer %}
              {% assign cart_container_selector = 'div.cart-drawer__item-list' %}
              {% assign cart_item_classname = 'cart-drawer__item-quantity' %}
          {% else %}
              {% assign cart_container_selector = 'table.cart__table' %}
              {% assign cart_item_classname = 'cart-item__qty-input' %}
          {% endif %}

          // Cannot disable gift-wrap input due to bug in Narrative theme, which clones attributes to other line items.
          //$('#quantity_' + $.escapeSelector('{{ gift_wraps_in_cart_key }}')).prop("disabled", true);
          //$('#updates_' + $.escapeSelector('{{ gift_wraps_in_cart_key }}')).prop("disabled", true);
          $('{{ cart_container_selector }}').on('change', 'input.{{ cart_item_classname }}', function recalcGiftWrap() {
              if ($('#gift-wrapping').prop("checked")) {
                  var itemsInCart = Shopify.Cart.GiftWrap.count();

                  // Update gift wrap quantity to match total items quantity
                  // The id changes from updates_<key> to quantity_<key> after cart refresh with Theme Narrative!!!
                  $('#quantity_' + $.escapeSelector('{{ gift_wraps_in_cart_key }}')).val(itemsInCart);
                  $('#updates_' + $.escapeSelector('{{ gift_wraps_in_cart_key }}')).val(itemsInCart);
                  Shopify.Cart.GiftWrap.set(itemsInCart, $.noop);
              }
          });
      });
  </script>

{% else %}

  <p style="clear: left; margin: 30px 0" class="rte">
    You attempted to add a gift-wrapping script to your shopping cart, but it won't work because you don't have
    a link list with handle <code>gift-wrapping</code> which, in turn, contains a link
    to your gift-wrapping product. Please review the steps outlined
    <a href="http://docs.shopify.com/manual/configuration/store-customization/page-specific/cart-page/add-a-gift-wrap-option">here</a>.
  </p>

{% endif %}

